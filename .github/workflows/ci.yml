name: Build

on:
  push:
    branches:
      - rework

  pull_request:
    branches:
      - rework

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  NATIVE_DEPS: libasound2-dev

jobs:
  code-style:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: 'rustfmt, clippy'

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            ./

      - name: Run rustfmt
        run: cargo fmt --all -- --check

      - name: Install apt dependencies
        run: sudo apt install ${{ env.NATIVE_DEPS }}

      - name: Run clippy
        uses: giraffate/clippy-action@v1
        with:
          #reporter: 'github-pr-review'
          reporter: 'github-check'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_error: true
          clippy_flags: --all-targets --all-features
          working-directory: ./
  msrv:
    runs-on: ubuntu-latest
    # we use a matrix here just because env can't be used in job names
    # https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    strategy:
      matrix:
        msrv: [1.60.0] # once_cell edition requires
    name: ubuntu / ${{ matrix.msrv }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install ${{ matrix.msrv }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.msrv }}

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            ./

      - name: cargo +${{ matrix.msrv }} check
        run: cargo check

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly

    steps:
      - uses: actions/checkout@v3

      - name: Install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            ./

      - name: Install apt packages
        run: sudo apt install ${{ env.NATIVE_DEPS }}

      - name: Compile Tests
        run: cargo test --no-run --all-features
        working-directory: ./

      - name: Test
        run: cargo test --all-features
